# This is a basic workflow to help you get started with Actions

name: Tflint

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: master
  pull_request:
    branches: master
    
env:
  TFLINT_VERSION: v0.12.1
  tf_version : 0.8.0
#  tf_working_dir: .

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pre-commit:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: set PY
        run: echo "::set-env name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
      - name: Install tflint
        run: |
          sudo curl -Lo /home/tflint.zip https://github.com/terraform-linters/tflint/releases/download/${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          sudo unzip /home/tflint.zip -d /usr/local/bin/
          sudo rm /home/tflint.zip
          sudo chmod +x /usr/local/bin/tflint
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: pre-commit/action@v1.0.1
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'fmt'
#          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
#         tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
#          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
#          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
